services:
  mysql:
    image: mysql:8.0
    env_file:
      - ./backend/.env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - chrono-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  shared:
    build:
      context: ./shared
      dockerfile: docker/Dockerfile
      target: development
    volumes:
      - ./shared:/app
      - /app/node_modules
    networks:
      - chrono-network
    healthcheck:
      test: [ "CMD", "test", "-f", "/app/dist/index.js" ]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
      target: development
    ports:
      - "3333:3333"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./shared/dist:/app/node_modules/@chrono-tracker/shared/dist:ro
      - ./shared/package.json:/app/node_modules/@chrono-tracker/shared/package.json:ro
    env_file:
      - ./backend/.env
    depends_on:
      shared:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - chrono-network

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
      target: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - ./shared/dist:/app/node_modules/@chrono-tracker/shared/dist:ro
      - ./shared/package.json:/app/node_modules/@chrono-tracker/shared/package.json:ro
    depends_on:
      shared:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - chrono-network

volumes:
  mysql_data:

networks:
  chrono-network:
    driver: bridge
